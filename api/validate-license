const { google } = require('googleapis');

module.exports = async (req, res) => {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const { orgId, licenseKey } = req.body;

  if (!orgId || !licenseKey) {
    return res.status(400).json({ error: 'Missing orgId or licenseKey' });
  }

  const sheetId = process.env.GOOGLE_SHEET_ID;
  const serviceAccount = JSON.parse(process.env.GOOGLE_SERVICE_ACCOUNT);

  const auth = new google.auth.GoogleAuth({
    credentials: serviceAccount,
    scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],
  });

  const sheets = google.sheets({ version: 'v4', auth });

  try {
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: sheetId,
      range: 'Sheet1!A2:D',
    });

    const rows = response.data.values;

    const match = rows.find(row => row[0] === orgId && row[1] === licenseKey);

    if (!match) {
      return res.status(403).json({ valid: false, reason: 'Invalid license' });
    }

    const workerLimit = parseInt(match[2], 10);
    const expires = match[3];

    return res.status(200).json({
      valid: true,
      workerLimit,
      expires
    });

  } catch (error) {
    return res.status(500).json({ error: error.message });
  }
};
